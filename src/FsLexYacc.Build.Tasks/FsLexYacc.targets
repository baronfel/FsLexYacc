<!--
***********************************************************************************************
FsLexYacc.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
		  created a backup copy.  Incorrect changes to this file will make it
		  impossible to load or build your projects from the command-line or the IDE.

PowerPack build rules.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<CompileDependsOn>CallFsLex;CallFsYacc;$(CompileDependsOn)</CompileDependsOn>
		<FsLexToolPath Condition="'$(FsLexToolPath)' == '' AND '$(MSBuildRuntimeType)'=='Core'">$(MSBuildThisFileDirectory)/fslex/netcoreapp3.1</FsLexToolPath>
		<FsLexToolExe Condition="'$(FsLexToolExe)' == '' AND '$(MSBuildRuntimeType)'=='Core'">fslex.dll</FsLexToolExe>
		<FsYaccToolPath Condition="'$(FsYaccToolPath)' == '' AND '$(MSBuildRuntimeType)'=='Core'">$(MSBuildThisFileDirectory)/fsyacc/netcoreapp3.1</FsYaccToolPath>
		<FsYaccToolExe Condition="'$(FsYaccToolExe)' == '' AND '$(MSBuildRuntimeType)'=='Core'">fsyacc.dll</FsYaccToolExe>
		<FsLexYaccToolRunner Condition="'$(UseFsLexYaccToolRunner)' != 'false' AND '$(FsLexYaccToolRunner)' == '' AND '$(MSBuildRuntimeType)'=='Core'">dotnet</FsLexYaccToolRunner>
		<FsYaccOutputFolder Condition="'$(FsYaccOutputFolder)' == ''">$(IntermediateOutputPath)</FsYaccOutputFolder>
		<FsLexOutputFolder Condition="'$(FsYaccOutputFolder)' == ''">$(IntermediateOutputPath)</FsLexOutputFolder>
	</PropertyGroup>

	<!-- Build FsLex files. -->
	<Target
		Name="CallFsLex"
		Inputs="@(FsLex)"
		Outputs="@(FsLex->'$(FsLexOutputFolder)%(Filename).fs')"
		Condition="'@(FsLex)'!=''"
    BeforeTargets="CoreCompile">

		<PropertyGroup>
			<DestinationFileName>$(FsLexOutputFolder)%(FsLex.Filename).fs</DestinationFileName>
			<Command>$(FsLexYaccToolRunner) &quot;$(FsLexToolPath)\$(FsLexToolExe)&quot; -o &quot;$(DestinationFileName)&quot;</Command>
			<Command Condition="'%(FsLex.Module)' != ''">$(Command) --module %(FsLex.Module)</Command>
			<Command Condition="'%(FsLex.Unicode)' == 'true'">$(Command) --unicode</Command>
			<Command>$(Command) %(FsLex.OtherFlags) %(FsLex.Identity)</Command>
		</PropertyGroup>
		
		<Warning Text="The Module property and '--module' in OtherFlags cannot be specified at the same time. Choose one or the other."
				 Condition="'%(FsLex.Module)' != '' and $([System.String]::new('%(FsLex.OtherFlags)').Contains('--module'))" />
		<Warning Text="The Unicode property and '--unicode' in OtherFlags cannot be specified at the same time. Choose one or the other."
				 Condition="'%(FsLex.Unicode)' == 'true' and $([System.String]::new('%(FsLex.OtherFlags)').Contains('--unicode'))" />
		
		<!-- Create the output directory -->
		<MakeDir Directories="$(FsLexOutputFolder)"/>
		<!-- Call FsLex -->
		<Exec Command="$(Command)"/>
		<!-- Make sure it will get cleaned  -->
		<ItemGroup>
			<FileWrites Include="$(DestinationFileName)"/>
		</ItemGroup>
	</Target>

	<!-- Build FsYacc files. -->
	<Target
		Name="CallFsYacc"
		Inputs="@(FsYacc)"
		Outputs="@(FsYacc->'$(FsYaccOutputFolder)%(Filename).fs')"
		Condition="'@(FsYacc)'!=''"
    BeforeTargets="CoreCompile">
		<PropertyGroup>
			<DestinationFileName>$(FsYaccOutputFolder)%(FsYacc.Filename).fs</DestinationFileName>
			<Command>$(FsLexYaccToolRunner) &quot;$(FsYaccToolPath)\$(FsYaccToolExe)&quot; -o &quot;$(DestinationFileName)&quot;</Command>
			<Command Condition="'%(FsYacc.Module)' != ''">$(Command) --module %(FsYacc.Module)</Command>
			<Command>$(Command) %(FsYacc.OtherFlags) %(FsYacc.Identity)</Command>
		</PropertyGroup>
		
		<Warning Text="The Module property and '--module' in OtherFlags cannot be specified at the same time. Choose one or the other."
				 Condition="'%(FsYacc.Module)' != '' and $([System.String]::new('%(FsYacc.OtherFlags)').Contains('--module'))" />

		<!-- Create the output directory -->
		<MakeDir Directories="$(FsYaccOutputFolder)"/>
		<Exec Command="$(Command)"/>

		<!-- Make sure it will get cleaned  -->
		<ItemGroup>
			<FileWrites Include="$(DestinationFileName)"/>
		</ItemGroup>
	</Target>
	<ItemGroup>
		<!-- these make fslex/fsyacc files invisible in the solution explorer in VS -->
		<AvailableItemName Include="FsLex">
			<Visible>false</Visible>
		</AvailableItemName>
		<AvailableItemName Include="FsYacc">
			<Visible>false</Visible>
		</AvailableItemName>
	</ItemGroup>
</Project>


